@page "/usuario"
@page "/usuario/{id:int}"
@using PrimerParcialEjemplo.BLL
@using PrimerParcialEjemplo.Models

@inject IToastService toast

<style>
    .form-register {
        box-shadow: 7px 13px 37px #000
    }
</style>

<EditForm Model="usuario" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <section class="form-register">

        <div class="card">
            <div class="card-header">
                <h3>Registro de Usuario</h3>
            </div>

            <div class="card-body">
                <form>
                    <div class="form-row align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <label>ID:</label>
                                <div class="input-group">
                                    <InputNumber class="form-control col-4" @bind-Value="usuario.usuarioId" />
                                    <ValidationMessage For="(()=>usuario.usuarioId)" />
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>NOMBRE:</label>
                        <InputText class="form-control" @bind-Value="usuario.nombre" />
                        <ValidationMessage For="(()=>usuario.nombre)" />
                    </div>

                    <div class="form-group">
                        <label>NIVEL:</label>
                        <select @bind="usuario.nivel" class="form-control">
                            <option value="1">Administrador</option>
                            <option value="2">Normal</option>
                        </select>
                        <ValidationMessage For="(()=>usuario.nivel)" />
                    </div>

                    <div class="form-group">
                        <label>FECHA:</label>
                        <InputDate class="form-control" @bind-Value="usuario.fecha" />
                        <ValidationMessage For="(()=>usuario.fecha)" />
                    </div>

                    <div class="form-group">
                        <label>CONTRASEÑA:</label>
                        <InputText class="form-control" @bind-Value="usuario.contraseña" />
                        <ValidationMessage For="(()=>usuario.contraseña)" />
                    </div>

                </form>
            </div>

            <div class="card-footer">
                <div class="form-group text-center" display:inline-block>
                    <button type="button" class="btn btn-secondary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-success">Guardar</button>
                    <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
                </div>
            </div>

        </div>

    </section>

</EditForm>

@code {
    [Parameter]
    public int id { get; set; }

    Usuario usuario = new Usuario();

    private void Nuevo()
    {
        this.usuario = new Usuario();
    }

    private void Guardar()
    {
        bool guardado = UsuarioBLL.Guardar(usuario);
        if (guardado)
        {
            Nuevo();
            toast.ShowSuccess("Guardado...");
        }
        else
            toast.ShowError("No se pudo guardar...");
    }

    private void Buscar()
    {
        Usuario auxusuario;
        auxusuario = UsuarioBLL.Buscar(usuario.usuarioId);
        if (usuario != null)
        {
            Nuevo();
            this.usuario = auxusuario;
        }
        else
            toast.ShowInfo("No encontrado..");
    }

    private void Eliminar()
    {
        bool eliminado;
        if (usuario.usuarioId > 0)
        {
            eliminado = UsuarioBLL.Eliminar(usuario.usuarioId);
            if (eliminado)
            {
                Nuevo();
                toast.ShowInfo("Eliminado..");
            }
            else
                toast.ShowError("No se pudo eliminar..");
        }
    }
}