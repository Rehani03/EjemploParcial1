@page "/empleado"
@page "/empleado/{id:int}"
@using PrimerParcialEjemplo.BLL
@using PrimerParcialEjemplo.Models

@inject IToastService toast 

<style> 
    .form-register{
        box-shadow: 7px 13px 37px #000
    }

</style>

<EditForm Model="empleado" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>

    <section class="form-register">
        <div class="card">
            
            <div class="card-header">
                <h3>Registro de Empleado</h3>
            </div>

            <div class="card-body">
                <form>    
                    <div class="form-row align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <label>ID:</label>
                                <div class="input-group">
                                    <InputNumber class="form-control col-4" @bind-Value="empleado.empleadoId" />
                                    <ValidationMessage For="(()=>empleado.empleadoId)" />
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col">
                            <label>FECHA:</label>
                            <InputDate class="form-control col-5" @bind-Value="empleado.fecha" />
                            <ValidationMessage For="(()=>empleado.fecha)" />
                        </div>
                        <div class="col">
                            <label>NOMBRE:</label>
                            <InputText class="form-control col-6" @bind-Value="empleado.nombre" />
                            <ValidationMessage For="(()=>empleado.nombre)" />
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label>NOMBRE:</label>
                        <InputText class="form-control" @bind-Value="empleado.nombre" />
                        <ValidationMessage For="(()=>empleado.nombre)" />
                    </div>

                    <div class="form-group">
                        <label>SUELDO:</label>
                        <InputNumber class="form-control" @bind-Value="empleado.sueldo" />
                        <ValidationMessage For="(()=>empleado.sueldo)" />
                    </div>

                    <div class="form-group">
                        <label>OCUPACION:</label>
                        <select @bind="empleado.ocupacion" class="form-control">
                            <option value="" disabled selected>Elija una ocupación</option>
                            @foreach(var item in lista)
                            {
                                <option value="@item.empleadoId">@item.nombre</option>
                            }
                        </select>
                        <ValidationMessage For="(()=>empleado.ocupacion)" />
                    </div>

                    <div class="form-group">
                        <label>FECHA:</label>
                        <InputDate class="form-control" @bind-Value="empleado.fecha" />
                        <ValidationMessage For="(()=>empleado.fecha)" />
                    </div>

                    <div class="form-group">
                        <label>CEDULA:</label>
                        <InputText @bind-Value="empleado.cedula" class="form-control"/>
                        <ValidationMessage For="(()=>empleado.cedula)"/>
                    </div>

                    <div class="form-check-inline">
                        <label>ESTADO:</label>
                        <InputCheckbox @bind-Value="empleado.estado" class="form-check-inline"/>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>NOMBRE</th>
                                    <th>SUELDO</th>
                                </tr>
                            </thead>

                        </table>
                    </div>


                </form>
            </div>

            <div class="card-footer">
                <div class="form-group text-center" display:inline-block>
                    <button type="button" class="btn btn-secondary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-success">Guardar</button>
                    <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
                </div>
            </div>

        </div>
    </section>

</EditForm>

@code {
    [Parameter]
    public int id { get; set; }
    List<Empleado> lista = new List<Empleado>();

    Empleado empleado = new Empleado();

    protected override void OnInitialized()
    {
        var empleadoAux = new Empleado()
        {
            empleadoId = 2,
            nombre = "Camilo",
            cedula = "40225550033",
            sueldo = 2500,
            fecha = DateTime.Now,
            estado = true,
            ocupacion = 0
        };

        lista.Add(empleadoAux);
    }

    private void Nuevo()
    {
        this.empleado = new Empleado();
    }

    private void Guardar()
    {
        bool guardado = EmpleadoBLL.Guardar(empleado);
        if (guardado)
        {
            Nuevo();
            toast.ShowSuccess("Guardado...");
        }
        else
            toast.ShowError("No se pudo guardar...");
    }

    private void Buscar()
    {
        Empleado auxEmpleado;
        auxEmpleado = EmpleadoBLL.Buscar(empleado.empleadoId);
        if (auxEmpleado != null)
        {
            Nuevo();
            this.empleado = auxEmpleado;
        }
        else
            toast.ShowInfo("No encontrado..");
    }

    private void Eliminar()
    {
        bool eliminado;
        if (empleado.empleadoId > 0)
        {
            eliminado = EmpleadoBLL.Eliminar(empleado.empleadoId);
            if (eliminado)
            {
                Nuevo();
                toast.ShowInfo("Eliminado..");
            }
            else
                toast.ShowError("No se pudo eliminar..");
        }
    }
}
